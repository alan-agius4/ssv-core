{"version":3,"sources":["enum.svc.ts"],"names":["EnumService","EnumService.constructor","EnumService.getNames","EnumService.getNamesKebab","EnumService.getValues"],"mappings":";IAEA;QAAAA;QA4BAC,CAACA;QA1BAD;;;;WAIGA;QACHA,8BAAQA,GAARA,UAASA,CAAMA;YACdE,MAAMA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,MAAMA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,KAAKA,CAACA,QAAQA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,EAAtBA,CAAsBA,CAACA,CAACA;QAC3DA,CAACA;QAEDF;;;;WAIGA;QACHA,mCAAaA,GAAbA,UAAcA,CAAMA;YACnBG,MAAMA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,CAACA,CAACA,SAASA,CAACA,CAACA,CAACA,EAAdA,CAAcA,CAACA,CAACA,MAAMA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,KAAKA,CAACA,QAAQA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,EAAtBA,CAAsBA,CAACA,CAACA;QACpFA,CAACA;QAEDH;;;;WAIGA;QACHA,+BAASA,GAATA,UAAUA,CAAMA;YACfI,MAAMA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,QAAQA,CAACA,CAACA,EAAEA,EAAEA,CAACA,EAAfA,CAAeA,CAACA,CAACA,MAAMA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,CAACA,KAAKA,CAACA,CAACA,CAACA,EAATA,CAASA,CAACA,CAACA;QACxEA,CAACA;QACFJ,kBAACA;IAADA,CA5BA,AA4BCA,IAAA;IA5BY,mBAAW,cA4BvB,CAAA","file":"enum.svc.js","sourcesContent":["import * as _ from \"lodash\";\r\n\r\nexport class EnumService {\r\n\r\n\t/**\r\n\t * Gets all names of the enum as an array.\r\n\t * @param {any} e enum to get data of.\r\n\t * @returns enum definition names as a string array e.g. [\"Elite\", \"Boss\", \"Normal\", \"RaidBoss\"].\r\n\t */\r\n\tgetNames(e: any): string[] {\r\n\t\treturn Object.keys(e).filter(v => isNaN(parseInt(v, 10)));\r\n\t}\r\n\r\n\t/**\r\n\t * Gets all names of the enum as an array with values kebab'ed cased characters e.g. \"raid-boss\"\r\n\t * @param {any} e enum to get data of.\r\n\t * @returns enum definition names as a string array with kebab case e.g. [\"elite\", \"boss\", \"normal\", \"raid-boss\"].\r\n\t */\r\n\tgetNamesKebab(e: any): string[] {\r\n\t\treturn Object.keys(e).map(v => _.kebabCase(v)).filter(v => isNaN(parseInt(v, 10)));\r\n\t}\r\n\r\n\t/**\r\n\t * Gets all values of the enum as an array.\r\n\t * @param {any} e enum to get data of.\r\n\t * @returns enum values as number array e.g. [1, 2, 3, 4]\r\n\t */\r\n\tgetValues(e: any): number[] {\r\n\t\treturn Object.keys(e).map(v => parseInt(v, 10)).filter(v => !isNaN(v));\r\n\t}\r\n}"],"sourceRoot":"/source/"}